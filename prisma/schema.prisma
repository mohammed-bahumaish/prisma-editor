datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(name: "AccountToUser", fields: [userId], references: [id])

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(name: "SessionToUser", fields: [userId], references: [id])
}

model User {
    id            String        @id @default(cuid())
    name          String?
    email         String?       @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]     @relation(name: "AccountToUser")
    sessions      Session[]     @relation(name: "SessionToUser")
    schemas       Schema[]      @relation(name: "SchemaToUser")
    sharedSchemas ShareSchema[] @relation(name: "UserToShareSchema")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Schema {
    id          Int          @id @default(autoincrement())
    userId      String
    user        User         @relation(name: "SchemaToUser", fields: [userId], references: [id])
    title       String
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    schema      String?
    YDoc        String?
    shareSchema ShareSchema? @relation(name: "SchemaToShareSchema")
}

model ShareSchema {
    id          Int        @id @default(autoincrement())
    schema      Schema?    @relation(name: "SchemaToShareSchema", fields: [schemaId], references: [id])
    schemaId    Int?       @unique
    token       String?    @default(cuid())
    createdAt   DateTime?  @default(now())
    sharedUsers User[]     @relation(name: "UserToShareSchema")
    permission  Permission
}

enum Permission {
    UPDATE
    VIEW
}
